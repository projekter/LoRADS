name: Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false

      matrix:
        os: [ubuntu-latest, windows-latest]
        build_type: [Release]
        c_compiler: [gcc, cl]
        include:
          - os: windows-latest
            c_compiler: cl
            lbt: libblastrampoline-5.dll.a
            lbtmake: msys2 -c 'make'
            out: Release/LoRADS_v_2_0_1-alpha.dll
            art: LoRADS-windows
          - os: ubuntu-latest
            c_compiler: gcc
            lbt: libblastrampoline.so.5
            lbtmake: make
            out: libLoRADS_v_2_0_1-alpha.so
            art: LoRADS-unix
        exclude:
          - os: windows-latest
            c_compiler: gcc
          - os: ubuntu-latest
            c_compiler: cl

    steps:
    - uses: actions/checkout@v4

    - name: Checkout libblastrampoline
      uses: actions/checkout@v4
      with:
        repository: JuliaLinearAlgebra/libblastrampoline
        path: ./libblastrampoline

    - name: Install MSYS
      if: runner.os == 'Windows'
      uses: msys2/setup-msys2@v2
      with:
        msystem: UCRT64
        update: true
        install: >-
          make
          mingw-w64-ucrt-x86_64-gcc

    - name: Build libblastrampoline
      working-directory: libblastrampoline/src
      run: ${{ matrix.lbtmake }}

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    - name: Configure CMake
      run: >
        cmake -B ${{ steps.strings.outputs.build-output-dir }}
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -DBLAS_LIBRARIES=${{ github.workspace }}/libblastrampoline/src/build/${{ matrix.lbt }}
        -S ${{ github.workspace }}

    - name: Build
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4.6.2
      with:
        path: ${{ steps.strings.outputs.build-output-dir }}/${{ matrix.out }}
        name: ${{ matrix.art }}